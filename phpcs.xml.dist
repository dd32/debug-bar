<?xml version="1.0"?>
<ruleset name="Debug Bar">
	<description>The code standard for Debug Bar is WordPress.</description>

	<!-- Pass some flags to PHPCS:
		 p flag: Show progress of the run.
		 s flag: Show sniff codes in all reports.
		 v flag: Print verbose output.
		 n flag: Do not print warnings.
	-->
	<arg value="ps"/>

	<!-- Only check the PHP files. JS files are checked separately with JSCS and JSHint. -->
	<arg name="extensions" value="php"/>

	<!-- Check all files in this directory and the directories below it. -->
	<file>.</file>

	<!-- ##### PHP cross-version compatibility ##### -->
	<config name="testVersion" value="5.2-99.0"/>
	<rule ref="PHPCompatibility">
		<!-- We can ignore this notice as the WP minimum requirement is 5.2.4
			and this notifies about a parameter which was added in 5.2.4. -->
		<exclude name="PHPCompatibility.PHP.NewFunctionParameters.debug_backtrace_optionsFound"/>
	</rule>

	<!--
		##### WordPress sniffs #####
		The `WordPress-Extra` ruleset contains the WP Core rules + best practices.
		Other rulesets which could be included in the future:
		WordPress-VIP
		WordPress-Docs
	-->
	<rule ref="WordPress-Extra">
		<!-- No need to lint the PHP, this is done in a separate task in the travis script. -->
		<exclude name="Generic.PHP.Syntax"/>

		<!-- Bit over-zealous, we're not using the value, just checking whether it's set.
			 See: https://github.com/WordPress-Coding-Standards/WordPress-Coding-Standards/issues/737 -->
		<exclude name="WordPress.Security.NonceVerification"/>
	</rule>

	<!-- Set the minimum supported WP version for this plugin for sniffs
		 checking usage of deprecated WP features. -->
	<config name="minimum_supported_wp_version" value="3.4"/>

	<!-- Downgrade the XSS sniff to a warning. These issues *do* need to be addressed at some point,
		 but shouldn't fail the build at this moment. -->
	<rule ref="WordPress.Security.EscapeOutput.OutputNotEscaped">
		<type>warning</type>
	</rule>

	<!-- Ignore error about the use of debug functions. This is a debug plugin after all. -->
	<rule ref="WordPress.PHP.DevelopmentFunctions">
		<properties>
			<property name="exclude" value="error_log" />
		</properties>
	</rule>

	<!-- Enable verification that all I18n calls use the correct text-domain. -->
	<rule ref="WordPress.WP.I18n">
		<properties>
			<property name="text_domain" type="array" value="debug-bar"/>
		</properties>
	</rule>

	<!-- Enable verification that everything in the global namespace is prefixed. -->
	<rule ref="WordPress.NamingConventions.PrefixAllGlobals">
		<properties>
			<property name="prefixes" type="array" value="debug_bar" />
		</properties>
	</rule>

	<!-- Allow the main file to not comply with the codestyle rules.
		 Changing the filename now, would break recognition of the plugin as active on upgrade. -->
	<rule ref="WordPress.Files.FileName">
		<exclude-pattern>*/debug-bar.php</exclude-pattern>
	</rule>

</ruleset>
